{"version":3,"sources":["components/Characters/preview.js","components/lists/filmList.js","components/lists/planetList.js","components/lists/starShipList.js","components/lists/vehiclesList.js","components/lists/speciesList.js","components/Characters/character.js","components/Characters/characters.js","components/Films/previewFilms.js","components/lists/characterList.js","components/Films/film.js","components/Films/films.js","components/Planets/previewPlanets.js","components/Planets/planet.js","components/Planets/planets.js","components/Starships/previewStarShips.js","components/Starships/starShip.js","components/Starships/starShips.js","components/vehicles/previewVehicles.js","components/vehicles/vehicle.js","components/vehicles/vehicles.js","components/species/previewSpecies.js","components/species/specie.js","components/species/species.js","App.js","index.js"],"names":["Preview","props","className","to","name","src","number","alt","FilmList","useState","film","setFilm","useEffect","a","async","url","JSON","parse","localStorage","getItem","fetch","resp","json","data","filme","allData","Object","assign","setItem","stringify","console","log","getFilm","title","1","2","3","4","5","6","7","episode_id","PlanetList","planet","setPlanet","actualPlanet","getPlanet","split","StarShipList","starShip","setStarShip","actualStarShip","getStarShip","VehiclesList","vehicles","setVehicles","actualVehicle","getVehicles","SpeciesList","species","setSpecies","actualSpecie","getSpecies","withRouter","onClick","history","goBack","info","key","height","mass","hair_color","skin_color","birth_year","gender","homeworld","films","map","starships","ship","vehicle","specie","Characters","characters","setCharacters","pageNumber","setPageNumber","i","concat","results","getCharacters","character","thisCharacter","path","render","exact","slice","PreviewFilms","order","Fragment","CharacterList","setCharacter","actaulCharacter","getCharacter","director","producer","release_date","opening_crawl","planets","Films","setFilms","getFilms","thisFilm","PreviewPlanets","id","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","Planets","setPlanets","getPlanets","planeta","thisPlanet","PreviewStarShips","onerror","model","manufacturer","cost_in_credits","length","max_atmosphering_speed","crew","cargo_capacity","consumables","hyperdrive_rating","MGLT","starship_class","pilots","StarShips","setStarShips","getStarShips","thisStarShip","spaceShips","PreviewVehicles","passengers","Vehicle_class","Vehicles","thisVehicle","PreviewSpecies","classification","designation","average_height","skin_colors","hair_colors","eye_colors","average_lifespan","language","people","Species","thisSpecie","App","Navbar","collapseOnSelect","expand","bg","variant","Toggle","aria-controls","Collapse","Nav","href","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e0ec863.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Preview = (props) => {\r\n    return (\r\n        <div className=\"character Preview\">\r\n            <Link to={`/Characters/${props.name}`}>\r\n                <h3>{props.name}</h3>\r\n                <img\r\n                    src={`https://starwars-visualguide.com/assets/img/characters/${props.number}.jpg`}\r\n                    alt={props.name + \"image\"}\r\n                />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preview\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FilmList = (props) => {\r\n    const [film, setFilm] = useState({ \"results\": [] });\r\n    const order = {\r\n        1: 4, 2: 5, 3: 6, 4: 1, 5: 2, 6: 3, 7: 7\r\n    };\r\n    useEffect(() => {\r\n        const getFilm = async () => {\r\n            var url = props.film;\r\n            if (JSON.parse(localStorage.getItem('filmListStored')) === null) {\r\n                const resp = await fetch(url);\r\n                const data = await resp.json();\r\n                const filme = {\r\n                    [props.film]: data\r\n                };\r\n                const allData = Object.assign(filme, JSON.parse(localStorage.getItem('filmListStored')));\r\n                setFilm(data);\r\n                localStorage.setItem('filmListStored', JSON.stringify(allData));\r\n            } else {\r\n                if (props.film in JSON.parse(localStorage.getItem('filmListStored')) === false) {\r\n                    const resp = await fetch(props.film);\r\n                    const data = await resp.json();\r\n                    const filme = {\r\n                        [props.film]: data\r\n                    };\r\n                    const allData = Object.assign(filme, JSON.parse(localStorage.getItem('filmListStored')));\r\n                    setFilm(data);\r\n                    localStorage.setItem('filmListStored', JSON.stringify(allData));\r\n                } else {\r\n                    setFilm(JSON.parse(localStorage.getItem('filmListStored'))[props.film]);\r\n                    console.log(\"cached\");\r\n                }\r\n            }\r\n        }\r\n        getFilm();\r\n    }, [props.film]);\r\n    return (\r\n        <div className=\"film\">\r\n            <Link to={`/Films/${film.title}`}>\r\n                <div className=\"mini\">\r\n                    <img alt={film.title} src={`https://starwars-visualguide.com/assets/img/films/${order[film.episode_id]}.jpg`} />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default FilmList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PlanetList = (props) => {\r\n    const [planet, setPlanet] = useState({ \"name\": \"n/a\" });\r\n    useEffect(() => {\r\n        const getPlanet = async () => {\r\n            if (JSON.parse(localStorage.getItem('planetListStored')) === null) {\r\n                const resp = await fetch(props.planet);\r\n                const data = await resp.json();\r\n                const actualPlanet = {\r\n                    [props.planet]: data\r\n                };\r\n                const allData = Object.assign(actualPlanet, JSON.parse(localStorage.getItem('planetListStored')));\r\n                setPlanet(data);\r\n                localStorage.setItem('planetListStored', JSON.stringify(allData));\r\n            } else {\r\n                if (props.planet in JSON.parse(localStorage.getItem('planetListStored')) === false) {\r\n                    const resp = await fetch(props.planet);\r\n                    const data = await resp.json();\r\n                    const actualPlanet = {\r\n                        [props.planet]: data\r\n                    };\r\n                    const allData = Object.assign(actualPlanet, JSON.parse(localStorage.getItem('planetListStored')));\r\n                    setPlanet(data);\r\n                    localStorage.setItem('planetListStored', JSON.stringify(allData));\r\n                } else {\r\n                    setPlanet(JSON.parse(localStorage.getItem('planetListStored'))[props.planet]);\r\n                    console.log(\"cached\");\r\n                }\r\n            }\r\n        }\r\n        getPlanet();\r\n    }, [props.planet]);\r\n    if (props.planet !== null) {\r\n        return (\r\n            <div className=\"planet\">\r\n                <Link to={`/Planets/${planet.name}`}>\r\n                    <div className=\"planet mini\">\r\n                        <img alt={planet.name} src={`https://starwars-visualguide.com/assets/img/planets/${props.planet.split(\"/\")[5]}.jpg`} />\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (<p>unknown</p>)\r\n    }\r\n}\r\nexport default PlanetList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst StarShipList = (props) => {\r\n    const [starShip, setStarShip] = useState({ \"results\": [] });\r\n    useEffect(() => {\r\n        const getStarShip = async () => {\r\n            var url = props.starShip\r\n            if (JSON.parse(localStorage.getItem('starShipsListStored')) === null) {\r\n                const resp = await fetch(url);\r\n                const data = await resp.json();\r\n                const actualStarShip = {\r\n                    [props.starShip]: data\r\n                };\r\n                const allData = Object.assign(actualStarShip, JSON.parse(localStorage.getItem('starShipsListStored')));\r\n                setStarShip(data);\r\n                localStorage.setItem('starShipsListStored', JSON.stringify(allData));\r\n            } else {\r\n                if (props.starShip in JSON.parse(localStorage.getItem('starShipsListStored')) === false) {\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    const actualStarShip = {\r\n                        [props.starShip]: data\r\n                    };\r\n                    const allData = Object.assign(actualStarShip, JSON.parse(localStorage.getItem('starShipsListStored')));\r\n                    setStarShip(data);\r\n                    localStorage.setItem('starShipsListStored', JSON.stringify(allData));\r\n                } else {\r\n                    setStarShip(JSON.parse(localStorage.getItem('starShipsListStored'))[props.starShip]);\r\n                    console.log(\"cached\");\r\n                }\r\n            }\r\n        }\r\n        getStarShip();\r\n    }, [props.starShip]);\r\n    return (\r\n        <div className=\"starShip\">\r\n            <Link to={`/Spaceships/${starShip.name}`}>\r\n                <div className=\"starship mini\">\r\n                    <img alt={starShip.name} src={`https://starwars-visualguide.com/assets/img/starships/${props.starShip.split(\"/\")[5]}.jpg`} />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default StarShipList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst VehiclesList = (props) => {\r\n    const [vehicles, setVehicles] = useState({ \"results\": [] });\r\n    useEffect(() => {\r\n        const getVehicles = async () => {\r\n            var url = props.vehicles\r\n            if (JSON.parse(localStorage.getItem('vehiclesListStored')) === null) {\r\n                const resp = await fetch(url);\r\n                const data = await resp.json();\r\n                const actualVehicle = {\r\n                    [props.vehicles]: data\r\n                };\r\n                const allData = Object.assign(actualVehicle, JSON.parse(localStorage.getItem('vehiclesListStored')));\r\n                setVehicles(data);\r\n                localStorage.setItem('vehiclesListStored', JSON.stringify(allData));\r\n            } else {\r\n                if (props.vehicles in JSON.parse(localStorage.getItem('vehiclesListStored')) === false) {\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    const actualVehicle = {\r\n                        [props.vehicles]: data\r\n                    };\r\n                    const allData = Object.assign(actualVehicle, JSON.parse(localStorage.getItem('vehiclesListStored')));\r\n                    setVehicles(data);\r\n                    localStorage.setItem('vehiclesListStored', JSON.stringify(allData));\r\n                } else {\r\n                    setVehicles(JSON.parse(localStorage.getItem('vehiclesListStored'))[props.vehicles]);\r\n                    console.log(\"cached\");\r\n                }\r\n            }\r\n        }\r\n        getVehicles();\r\n    }, [props.vehicles]);\r\n    return (\r\n        <div className=\"vehicles\">\r\n            <Link to={`/vehicles/${vehicles.name}`}>\r\n                <div className=\"vehicles mini\">\r\n                    {/* <h3>{vehicles.title}</h3> */}\r\n                    <img alt={vehicles.name} src={`https://starwars-visualguide.com/assets/img/vehicles/${props.vehicles.split(\"/\")[5]}.jpg`} />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default VehiclesList\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst SpeciesList = (props) => {\r\n    const [species, setSpecies] = useState({ \"results\": [] });\r\n    useEffect(() => {\r\n        const getSpecies = async () => {\r\n            var url = props.species\r\n            if (JSON.parse(localStorage.getItem('speciesListStored')) === null) {\r\n                const resp = await fetch(url);\r\n                const data = await resp.json();\r\n                const actualSpecie = {\r\n                    [props.species]: data\r\n                };\r\n                const allData = Object.assign(actualSpecie, JSON.parse(localStorage.getItem('speciesListStored')));\r\n                setSpecies(data);\r\n                localStorage.setItem('speciesListStored', JSON.stringify(allData));\r\n            } else {\r\n                if (props.species in JSON.parse(localStorage.getItem('speciesListStored')) === false) {\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    const actualSpecie = {\r\n                        [props.species]: data\r\n                    };\r\n                    const allData = Object.assign(actualSpecie, JSON.parse(localStorage.getItem('speciesListStored')));\r\n                    setSpecies(data);\r\n                    localStorage.setItem('speciesListStored', JSON.stringify(allData));\r\n                } else {\r\n                    setSpecies(JSON.parse(localStorage.getItem('speciesListStored'))[props.species]);\r\n                    console.log(\"cached\");\r\n                }\r\n            }\r\n        }\r\n        getSpecies();\r\n    }, [props.species]);\r\n    return (\r\n        <div className=\"species\">\r\n            <Link to={`/Species/${species.name}`}>\r\n                <div className=\"species mini\">\r\n                    <img alt={species.name} src={`https://starwars-visualguide.com/assets/img/species/${props.species.split(\"/\")[5]}.jpg`} />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default SpeciesList\r\n","import React from 'react'\r\nimport FilmList from '../lists/filmList';\r\nimport PlanetList from '../lists/planetList'\r\nimport StarShipList from '../lists/starShipList'\r\nimport VehiclesList from '../lists/vehiclesList'\r\nimport SpeciesList from '../lists/speciesList'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst Character = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <button className=\"goBack\" onClick={props.history.goBack}>Go back</button>\r\n            <div className=\"info\">\r\n                <img alt={props.info.name} key={props.info.name} src={`https://starwars-visualguide.com/assets/img/characters/${props.info.url.split(\"/\")[5]}.jpg`} />\r\n                <div className=\"data\">\r\n                    <h2>Name : {props.info.name}</h2>\r\n                    <p>Height: {props.info.height}</p>\r\n                    <p>Mass: {props.info.mass}</p>\r\n                    <p>Hair color: {props.info.hair_color}</p>\r\n                    <p>Skin color: {props.info.skin_color}</p>\r\n                    <p>Birth year: {props.info.birth_year}</p>\r\n                    <p>Gender: {props.info.gender}</p>\r\n                    <p>Homeworld: </p>\r\n                    <PlanetList planet={props.info.homeworld} />\r\n                </div>\r\n            </div>\r\n            <div className=\"related\">\r\n                <h3>Appears in</h3>\r\n                <div className=\"minis\">\r\n                    {props.info.films.map(film => {\r\n                        return (\r\n                            <FilmList key={`film-${film.split(\"/\")[5]}`} film={film} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <h3>StarShips</h3>\r\n                <div className=\"minis\">\r\n                    {props.info.starships.map(ship => {\r\n                        return (\r\n                            <StarShipList key={`spaceship-${ship.split(\"/\")[5]}`} starShip={ship} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <h3>Vehicles</h3>\r\n                <div className=\"minis\">\r\n                    {props.info.vehicles.map(vehicle => {\r\n                        return (\r\n                            <VehiclesList key={`vehicle-${vehicle.split(\"/\")[5]}`} vehicles={vehicle} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <h3>Specie</h3>\r\n                <div className=\"minis\">\r\n                    {props.info.species.map(specie => {\r\n                        return (\r\n                            <SpeciesList key={`specie-${specie.split(\"/\")[5]}`} species={specie} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Character)\r\n","import React, { useEffect, useState } from 'react'\r\nimport Preview from './preview'\r\nimport { Route } from 'react-router-dom'\r\nimport Character from \"./character\"\r\n\r\nconst Characters = () => {\r\n    const [characters, setCharacters] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    useEffect(() => {\r\n        const getCharacters = async () => {\r\n            if (localStorage.getItem('characterStored') === null) {\r\n                let allData = [];\r\n                for (let i = 1; i <= 9; i++) {\r\n                    let url = `https://swapi.co/api/people?page=${i}`\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    allData = allData.concat(data.results);\r\n                    setCharacters(allData);\r\n                }\r\n                localStorage.setItem('characterStored', JSON.stringify(allData));\r\n            } else {\r\n                console.log(\"cached\")\r\n                setCharacters(JSON.parse(localStorage.getItem('characterStored')));\r\n            }\r\n        }\r\n        getCharacters();\r\n    }, []);\r\n\r\n    let character = characters.map((thisCharacter, i) => {\r\n        return (\r\n            <Route path={`/Characters/${thisCharacter.name}`} key={`${thisCharacter.name}-Page`} render={() => <Character info={thisCharacter} i={i} pageNumber={pageNumber} />} />\r\n        )\r\n    });\r\n\r\n\r\n    const nextPage = () => {\r\n        if (pageNumber<9) {\r\n            setPageNumber(pageNumber + 1)\r\n        }\r\n    }\r\n    const previousPage = () => {\r\n        if (pageNumber>1) {\r\n            setPageNumber(pageNumber - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <Route exact path=\"/Characters\">\r\n                <div className=\"characters\">\r\n                    {characters.slice((pageNumber - 1) * 10, pageNumber * 10).map((character) => {\r\n                        return (\r\n                            <Preview\r\n                                key={character.name}\r\n                                info={character}\r\n                                name={character.name}\r\n                                number={character.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"pageButtons\">\r\n                    <button onClick={previousPage}>Previous Page</button>\r\n                    <button onClick={nextPage}>Next Page</button>\r\n                </div>\r\n            </Route>\r\n            {character}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Characters\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PreviewFilms = (props) => {\r\n    console.log(props)\r\n    const order = [1, 5, 4, 6, 3, 2, 7];\r\n    return (\r\n        <React.Fragment>\r\n            {props.films.map((film, i) => {\r\n                return (\r\n                    <div key={`film:${film.title}`} className=\"films Preview\">\r\n                        <Link to={`/Films/${film.title}`}>\r\n                            <h3>{film.title}</h3>\r\n                            <img\r\n                                alt={film.title}\r\n                                src={`https://starwars-visualguide.com/assets/img/films/${order[i]}.jpg`}\r\n                            />\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PreviewFilms\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CharacterList = (props) => {\r\n    const [character, setCharacter] = useState({ });\r\n    useEffect(() => {\r\n        const getCharacter = async () => {\r\n            var url = props.character\r\n            if (JSON.parse(localStorage.getItem('characterListStored')) === null) {\r\n                const resp = await fetch(url);\r\n                const data = await resp.json();\r\n                const actaulCharacter = {\r\n                    [props.character]: data\r\n                };\r\n                const allData = Object.assign(actaulCharacter, JSON.parse(localStorage.getItem('characterListStored')));\r\n                setCharacter(data);\r\n                localStorage.setItem('characterListStored', JSON.stringify(allData));\r\n            } else {\r\n                if (props.character in JSON.parse(localStorage.getItem('characterListStored')) === false) {\r\n                    const resp = await fetch(props.character);\r\n                    const data = await resp.json();\r\n                    const actaulCharacter = {\r\n                        [props.character]: data\r\n                    };\r\n                    const allData = Object.assign(actaulCharacter, JSON.parse(localStorage.getItem('characterListStored')));\r\n                    setCharacter(data);\r\n                    localStorage.setItem('characterListStored', JSON.stringify(allData));\r\n                } else {\r\n                    setCharacter(JSON.parse(localStorage.getItem('characterListStored'))[props.character]);\r\n                    console.log(\"cached\");\r\n                }\r\n            }\r\n        }\r\n        getCharacter();\r\n    }, [props.character]);\r\n    return (\r\n        <div className=\"character\">\r\n            <Link to={`/Characters/${character.name}`}>\r\n                <div className=\"mini\">\r\n                    <img alt={`Mini-${character.name}`} src={`https://starwars-visualguide.com/assets/img/characters/${props.character.split(\"/\")[5]}.jpg`} />\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default CharacterList\r\n","import React from 'react'\r\nimport CharactersList from '../lists/characterList'\r\nimport PlanetsList from '../lists/planetList'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Film = (props) => {\r\n    const order = [1, 5, 4, 6, 3, 2, 7];\r\n    return (\r\n        <div className=\"filmPage\">\r\n            <button className=\"goBack\" onClick={props.history.goBack}>Go back</button>            <div className=\"info\">\r\n                <img\r\n                    alt={props.info.title}\r\n                    src={`https://starwars-visualguide.com/assets/img/films/${order[props.i]}.jpg`}\r\n                />\r\n                <div className=\"data\">\r\n                    <h2>{props.info.title}</h2>\r\n                    <p>{`Episode : ${props.info.episode_id}`}</p>\r\n                    <p>{`Director : ${props.info.director}`}</p>\r\n                    <p>{`Producer : ${props.info.producer}`}</p>\r\n                    <p>{`release date : ${props.info.release_date}`}</p>\r\n                    <h3>Opening Crawl</h3>\r\n                    <div className=\"openingCrawl\">\r\n                        <p>{props.info.opening_crawl}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"related\">\r\n                <h1>Characters in Film</h1>\r\n                <div className=\"CharactersMini minis\">\r\n                    {props.info.characters.map(character => (<CharactersList key={`film-character-${character.split(\"/\")[5]}`} character={character} />))}\r\n                </div>\r\n                <h1>Planets in Film</h1>\r\n                <div className=\"planetsMini minis\">\r\n                    {props.info.planets.map(planet => (<PlanetsList key={`film-planet-${planet.split(\"/\")[5]}`} planet={planet} />))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Film)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport PreviewFilms from './previewFilms'\r\nimport Film from './film'\r\n\r\nconst Films = (props) => {\r\n    const [films, setFilms] = useState({ \"results\": [] });\r\n    useEffect(() => {\r\n        const getFilms = async () => {\r\n            if (localStorage.getItem('filmStored')===null) {\r\n                var url = `https://swapi.co/api/films/`\r\n                const resp = await fetch(url);\r\n                const data = await resp.json();\r\n                setFilms(data);\r\n                localStorage.setItem('filmStored', JSON.stringify(data));\r\n            } else {\r\n                setFilms(JSON.parse(localStorage.getItem('filmStored')));\r\n            }\r\n        }\r\n        getFilms();\r\n    }, []);\r\n\r\n    let filme = films.results.map((thisFilm, i) => {\r\n        return (\r\n            <Route path={`/Films/${thisFilm.title}`} key={`${thisFilm.title}-Page`} render={() => <Film info={thisFilm} i={i} />} />\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <Route exact path=\"/Films\">\r\n                <div className=\"films\">\r\n                    <PreviewFilms films={films.results} />\r\n                </div>\r\n            </Route>\r\n            {filme}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Films\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PreviewPlanets = (props) => {\r\n    return (\r\n        <div className=\"planets Preview\" key={`Planet-${props.name}`}>\r\n            <Link to={`/Planets/${props.name}`}>\r\n                <h3>{props.name}</h3>\r\n                <img alt={props.name} src={`https://starwars-visualguide.com/assets/img/planets/${props.id}.jpg`} />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviewPlanets\r\n","import React from 'react'\r\nimport CharactersList from '../lists/characterList'\r\nimport FilmsList from '../lists/filmList'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Planet = (props) => {\r\n    return (\r\n        <div className=\"filmPage\">\r\n            <button className=\"goBack\" onClick={props.history.goBack}>Go back</button>\r\n            <div className=\"info\">\r\n                <img alt={props.info.name} src={`https://starwars-visualguide.com/assets/img/planets/${props.info.url.split(\"/\")[5]}.jpg`} />\r\n                <div className=\"data\">\r\n                    <h2>{props.info.name}</h2>\r\n                    <p>{`Rotation period : ${props.info.rotation_period}`}</p>\r\n                    <p>{`Orbital period : ${props.info.orbital_period}`}</p>\r\n                    <p>{`Diameter : ${props.info.diameter}`}</p>\r\n                    <p>{`Climate : ${props.info.climate}`}</p>\r\n                    <p>{`Gravity : ${props.info.gravity}`}</p>\r\n                    <p>{`Terrain : ${props.info.terrain}`}</p>\r\n                    <p>{`Surface water : ${props.info.surface_water}`}</p>\r\n                    <p>{`Population : ${props.info.population}`}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"related\">\r\n                <h1>Residents</h1>\r\n                <div className=\"Characters minis\">\r\n                    {props.info.residents.map(character => (<CharactersList key={`planet-character-${character.split(\"/\")[5]}`} character={character} />))}\r\n                </div>\r\n                <h1>Appears in</h1>\r\n                <div className=\"filmsMini minis\">\r\n                    {props.info.films.map(film => (<FilmsList key={`planet-film-${film.split(\"/\")[5]}`} film={film} />))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Planet)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport PreviewPlanets from './previewPlanets'\r\nimport Planet from './planet'\r\n\r\nconst Planets = (props) => {\r\n    const [planets, setPlanets] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    useEffect(() => {\r\n        const getPlanets = async () => {\r\n            if (localStorage.getItem('planetStored') === null) {\r\n                let allData = [];\r\n                for (let i = 1; i <= 7; i++) {\r\n                    let url = `https://swapi.co/api/planets?page=${i}`\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    allData = allData.concat(data.results);\r\n                    setPlanets(allData);\r\n                }\r\n                localStorage.setItem('planetStored', JSON.stringify(allData));\r\n            } else {\r\n                console.log(\"cached\")\r\n                setPlanets(JSON.parse(localStorage.getItem('planetStored')));\r\n            }\r\n        }\r\n        getPlanets();\r\n    }, []);\r\n\r\n    const nextPage = () => {\r\n        console.log(pageNumber)\r\n        if (pageNumber < 7) {\r\n            setPageNumber(pageNumber + 1)\r\n        }\r\n    }\r\n    const previousPage = () => {\r\n        if (pageNumber > 1) {\r\n            setPageNumber(pageNumber - 1)\r\n        }\r\n    }\r\n\r\n    let planeta = planets.map((thisPlanet) => {\r\n        return (\r\n            <Route path={`/Planets/${thisPlanet.name}`} key={`${thisPlanet.name}-Page`} render={() => <Planet info={thisPlanet} />} />\r\n        )\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <Route exact path=\"/Planets\">\r\n                <div className=\"planets\">\r\n                    {planets.slice((pageNumber - 1) * 10, pageNumber * 10).map((planet) => {\r\n                        return (\r\n                            <PreviewPlanets\r\n                                key={planet.name}\r\n                                name={planet.name}\r\n                                id={planet.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"pageButtons\">\r\n                    <button onClick={previousPage}>Previous Page</button>\r\n                    <button onClick={nextPage}>Next Page</button>\r\n                </div>\r\n            </Route>\r\n            {planeta}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Planets\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PreviewStarShips = (props) => {\r\n    return (\r\n        <div className=\"starShips Preview\">\r\n            <Link to={`/Spaceships/${props.info.name}`}>\r\n                <h3>{props.info.name}</h3>\r\n                <img\r\n                    src={`https://starwars-visualguide.com/assets/img/starships/${props.id}.jpg`}\r\n                    alt={props.info.name + \"image\"}\r\n                    onerror=\"this.onerror=null;this.src='https://as1.ftcdn.net/jpg/02/71/86/48/500_F_271864847_qVuzNqkJcnIAjkL9n5OHTsNaPTLqZbpG.jpg';\"\r\n                />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviewStarShips\r\n","import React from 'react'\r\nimport FilmList from '../lists/filmList';\r\nimport CharacterList from '../lists/characterList'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst StarShip = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <button className=\"goBack\" onClick={props.history.goBack}>Go back</button>            <div className=\"info\">\r\n                <img alt={props.info.name} key={props.info.name + \"image\"} src={`https://starwars-visualguide.com/assets/img/starships/${props.info.url.split(\"/\")[5]}.jpg`} />\r\n                <div className=\"data\">\r\n                    <h2>{props.info.name}</h2>\r\n                    <p>Model: {props.info.model}</p>\r\n                    <p>Manufacturer: {props.info.manufacturer}</p>\r\n                    <p>Cost In Credits: {props.info.cost_in_credits}</p>\r\n                    <p>Length: {props.info.length}</p>\r\n                    <p>Max Atmosphering Speed: {props.info.max_atmosphering_speed}</p>\r\n                    <p>Crew: {props.info.crew}</p>\r\n                    <p>Cargo Capacity: {props.info.cargo_capacity}</p>\r\n                    <p>Consumables: {props.info.consumables}</p>\r\n                    <p>Hyperdrive Rating: {props.info.hyperdrive_rating}</p>\r\n                    <p>MGLT: {props.info.MGLT}</p>\r\n                    <p>Starship Class: {props.info.starship_class}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"related\">\r\n                <h1>Appears in</h1>\r\n                <div className=\"filmsIn minis\">\r\n                    {props.info.films.map(film => {\r\n                        return (\r\n                            <FilmList key={`startShip-film-${film.split(\"/\")[5]}`} film={film} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <h1>Pilots</h1>\r\n                <div className=\"pilots minis\">\r\n                    {props.info.pilots.map(character => {\r\n                        return (\r\n                            <CharacterList key={`startShip-pilot-${character.split(\"/\")[5]}`} character={character} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(StarShip)\r\n","import React, { useEffect, useState } from 'react'\r\nimport PreviewStarShips from './previewStarShips'\r\nimport { Route } from 'react-router-dom'\r\nimport StarShip from \"./starShip\"\r\n\r\nconst StarShips = () => {\r\n    const [StarShips, setStarShips] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    useEffect(() => {\r\n        const getStarShips = async () => {\r\n            if (localStorage.getItem('StarShipStored') === null) {\r\n                let allData = [];\r\n                for (let i = 1; i <= 4; i++) {\r\n                    let url = `https://swapi.co/api/starships?page=${i}`\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    allData = allData.concat(data.results);\r\n                    setStarShips(allData);\r\n                }\r\n                localStorage.setItem('StarShipStored', JSON.stringify(allData));\r\n            } else {\r\n                console.log(\"cached\")\r\n                setStarShips(JSON.parse(localStorage.getItem('StarShipStored')));\r\n            }\r\n        }\r\n        getStarShips();\r\n    }, []);\r\n\r\n    let starShip = StarShips.map((thisStarShip) => {\r\n        return (\r\n            <Route path={`/Spaceships/${thisStarShip.name}`} key={`${thisStarShip.name}-Page`} render={() => <StarShip info={thisStarShip} />} />\r\n        )\r\n    });\r\n\r\n\r\n    const nextPage = () => {\r\n        if (pageNumber < 4) {\r\n            setPageNumber(pageNumber + 1)\r\n        }\r\n    }\r\n    const previousPage = () => {\r\n        if (pageNumber > 1) {\r\n            setPageNumber(pageNumber - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <Route exact path=\"/Spaceships\">\r\n                <div className=\"StarShips\">\r\n                    {StarShips.slice((pageNumber - 1) * 10, pageNumber * 10).map((spaceShips) => {\r\n                        return (\r\n                            <PreviewStarShips\r\n                                key={spaceShips.name}\r\n                                info={spaceShips}\r\n                                id={spaceShips.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"pageButtons\">\r\n                    <button onClick={previousPage}>Previous Page</button>\r\n                    <button onClick={nextPage}>Next Page</button>\r\n                </div>\r\n            </Route>\r\n            {starShip}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarShips\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PreviewVehicles = (props) => {\r\n    return (\r\n        <div className=\"vehicles Preview\">\r\n            <Link to={`/Vehicles/${props.info.name}`}>\r\n                <h3>{props.info.name}</h3>\r\n                <img\r\n                    src={`https://starwars-visualguide.com/assets/img/vehicles/${props.id}.jpg`}\r\n                    alt={props.info.name + \"image\"}\r\n                />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviewVehicles\r\n","import React from 'react'\r\nimport FilmList from '../lists/filmList';\r\nimport CharacterList from '../lists/characterList'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst Vehicle = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <button className=\"goBack\" onClick={props.history.goBack}>Go back</button>            <div className=\"info\">\r\n                <img alt={props.info.name} key={props.info.name + \"image\"} src={`https://starwars-visualguide.com/assets/img/vehicles/${props.info.url.split(\"/\")[5]}.jpg`} />\r\n                <div className=\"data\">\r\n                    <h2>{props.info.name}</h2>\r\n                    <p>Model: {props.info.model}</p>\r\n                    <p>Manufacturer: {props.info.manufacturer}</p>\r\n                    <p>Cost In Credits: {props.info.cost_in_credits}</p>\r\n                    <p>Length: {props.info.length}</p>\r\n                    <p>Max Atmosphering Speed: {props.info.max_atmosphering_speed}</p>\r\n                    <p>Crew: {props.info.crew}</p>\r\n                    <p>Passengers: {props.info.passengers}</p>\r\n                    <p>Cargo Capacity: {props.info.cargo_capacity}</p>\r\n                    <p>Consumables: {props.info.consumables}</p>\r\n                    <p>Vehicle Class: {props.info.Vehicle_class}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"related\">\r\n                <h1>Appears in</h1>\r\n                <div className=\"filmsIn minis\">\r\n                    {props.info.films.map(film => {\r\n                        return (\r\n                            <FilmList key={`startShip-film-${film.split(\"/\")[5]}`} film={film} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <h1>Pilots</h1>\r\n                <div className=\"pilots minis\">\r\n                    {props.info.pilots.map(character => {\r\n                        return (\r\n                            <CharacterList key={`startShip-pilot-${character.split(\"/\")[5]}`} character={character} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Vehicle)\r\n","import React, { useEffect, useState } from 'react'\r\nimport Previewvehicles from './previewVehicles'\r\nimport { Route } from 'react-router-dom'\r\nimport Vehicle from './vehicle'\r\n\r\nconst Vehicles = () => {\r\n    const [vehicles, setVehicles] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    useEffect(() => {\r\n        const getVehicles = async () => {\r\n            if (localStorage.getItem('vehicleStored') === null) {\r\n                let allData = [];\r\n                for (let i = 1; i <= 4; i++) {\r\n                    let url = `https://swapi.co/api/vehicles?page=${i}`\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    allData = allData.concat(data.results);\r\n                    setVehicles(allData);\r\n                }\r\n                localStorage.setItem('vehicleStored', JSON.stringify(allData));\r\n            } else {\r\n                console.log(\"cached\")\r\n                setVehicles(JSON.parse(localStorage.getItem('vehicleStored')));\r\n            }\r\n        }\r\n        getVehicles();\r\n    }, []);\r\n\r\n    let vehicle = vehicles.map((thisVehicle) => {\r\n        return (\r\n            <Route path={`/Vehicles/${thisVehicle.name}`} key={`${thisVehicle.name}-Page`} render={() => <Vehicle info={thisVehicle} />} />\r\n        )\r\n    });\r\n\r\n    const nextPage = () => {\r\n        if (pageNumber < 4) {\r\n            setPageNumber(pageNumber + 1)\r\n        }\r\n    }\r\n    const previousPage = () => {\r\n        if (pageNumber > 1) {\r\n            setPageNumber(pageNumber - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <Route exact path=\"/Vehicles\">\r\n                <div className=\"vehicles\">\r\n                    {vehicles.slice((pageNumber - 1) * 10, pageNumber * 10).map((vehicle) => {\r\n                        return (\r\n                            <Previewvehicles\r\n                                key={vehicle.name}\r\n                                info={vehicle}\r\n                                id={vehicle.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"pageButtons\">\r\n                    <button onClick={previousPage}>Previous Page</button>\r\n                    <button onClick={nextPage}>Next Page</button>\r\n                </div>\r\n            </Route>\r\n            {vehicle}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vehicles\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PreviewSpecies = (props) => {\r\n    return (\r\n        <div className=\"species Preview\">\r\n            <Link to={`/Species/${props.info.name}`}>\r\n                <h3>{props.info.name}</h3>\r\n                <img\r\n                    src={`https://starwars-visualguide.com/assets/img/species/${props.id}.jpg`}\r\n                    alt={props.info.name + \"image\"}\r\n                />\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreviewSpecies\r\n","import React from 'react'\r\nimport FilmList from '../lists/filmList';\r\nimport CharacterList from '../lists/characterList'\r\nimport PlanetList from '../lists/planetList'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nconst Specie = (props) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <button className=\"goBack\" onClick={props.history.goBack}>Go back</button>            <div className=\"info\">\r\n                <img alt={props.info.name} key={props.info.name + \"image\"} src={`https://starwars-visualguide.com/assets/img/species/${props.info.url.split(\"/\")[5]}.jpg`} />\r\n                <div className=\"data\">\r\n                    <h2>{props.info.name}</h2>\r\n                    <p>Classification: {props.info.classification}</p>\r\n                    <p>Designation: {props.info.designation}</p>\r\n                    <p>Average Height: {props.info.average_height}</p>\r\n                    <p>Skin Colors: {props.info.skin_colors}</p>\r\n                    <p>Hair Colors: {props.info.hair_colors}</p>\r\n                    <p>Eye Colors: {props.info.eye_colors}</p>\r\n                    <p>Average Lifespan: {props.info.average_lifespan}</p>\r\n                    <p>Language: {props.info.language}</p>\r\n                    <p>Homeworld: </p>\r\n                    <PlanetList planet={props.info.homeworld} />\r\n                </div>\r\n            </div>\r\n            <div className=\"related\">\r\n                <h1>Appears in</h1>\r\n                <div className=\"filmsIn minis\">\r\n                    {props.info.films.map(film => {\r\n                        return (\r\n                            <FilmList key={`Species-film-${film.split(\"/\")[5]}`} film={film} />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <h1>People</h1>\r\n                <div className=\"people minis\">\r\n                    {props.info.people.map(character => {\r\n                        return (\r\n                            <CharacterList key={`Species-people-${character.split(\"/\")[5]}`} character={character} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Specie)\r\n","import React, { useEffect, useState } from 'react'\r\nimport PreviewSpecies from './previewSpecies'\r\nimport { Route } from 'react-router-dom'\r\nimport Specie from './specie'\r\n\r\nconst Species = () => {\r\n    const [species, setSpecies] = useState([]);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    useEffect(() => {\r\n        const getSpecies = async () => {\r\n            if (localStorage.getItem('specieStored') === null) {\r\n                let allData = [];\r\n                for (let i = 1; i <= 4; i++) {\r\n                    let url = `https://swapi.co/api/species?page=${i}`\r\n                    const resp = await fetch(url);\r\n                    const data = await resp.json();\r\n                    allData = allData.concat(data.results);\r\n                    setSpecies(allData);\r\n                }\r\n                localStorage.setItem('specieStored', JSON.stringify(allData));\r\n            } else {\r\n                console.log(\"cached\")\r\n                setSpecies(JSON.parse(localStorage.getItem('specieStored')));\r\n            }\r\n        }\r\n        getSpecies();\r\n    }, [pageNumber]);\r\n\r\n    let specie = species.map((thisSpecie) => {\r\n        return (\r\n            <Route path={`/Species/${thisSpecie.name}`} key={`${thisSpecie.name}-Page`} render={() => <Specie info={thisSpecie} />} />\r\n        )\r\n    });\r\n\r\n    const nextPage = () => {\r\n        if (pageNumber < 4) {\r\n            setPageNumber(pageNumber + 1)\r\n        }\r\n    }\r\n    const previousPage = () => {\r\n        if (pageNumber > 1) {\r\n            setPageNumber(pageNumber - 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Wrapper\">\r\n            <Route exact path=\"/Species\">\r\n                <div className=\"species\">\r\n                    {species.slice((pageNumber - 1) * 10, pageNumber * 10).map((specie) => {\r\n                        return (\r\n                            <PreviewSpecies\r\n                                key={specie.name}\r\n                                info={specie}\r\n                                id={specie.url.split(\"/\")[5]}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"pageButtons\">\r\n                    <button onClick={previousPage}>Previous Page</button>\r\n                    <button onClick={nextPage}>Next Page</button>\r\n                </div>\r\n            </Route>\r\n            {specie}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Species\r\n","import React from 'react'\nimport { Navbar, Nav} from 'react-bootstrap'\nimport { BrowserRouter, Route, Link} from 'react-router-dom'\nimport Characters from './components/Characters/characters'\nimport Films from './components/Films/films';\nimport Planets from './components/Planets/planets';\nimport StarShips from './components/Starships/starShips'\nimport Vehicles from './components/vehicles/vehicles';\nimport Species from './components/species/species';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Link to=\"/starwarsapi\" className=\"navbar-brand\">Home</Link>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"links\">\n              <Link to=\"/Characters\" className=\"nav-link\">Characters</Link>\n              <Link to=\"/Planets\" className=\"nav-link\">Planets</Link>\n              <Link to=\"/Spaceships\" className=\"nav-link\">Spaceships</Link>\n              <Link to=\"/Vehicles\" className=\"nav-link\">Vehicles</Link>\n              <Link to=\"/Films\" className=\"nav-link\">Films</Link>\n              <Link to=\"/Species\" className=\"nav-link\">Species</Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n      </div>\n      <Route path=\"/starwarsapi\" render={() => <Films/>} />\n      <Route path=\"/Characters\" render={() => <Characters/>} />\n      <Route path=\"/Films\" render={() => <Films/>} />\n      <Route path=\"/Planets\" render={() => <Planets/>} />\n      <Route path=\"/Spaceships\" render={() => <StarShips/>} />\n      <Route path=\"/Vehicles\" render={() => <Vehicles/>} />\n      <Route path=\"/Species\" render={() => <Species/>} />\n      <footer>\n        <p>Posted by: K</p>\n        <p>Contact information: <a href=\"mailto:someone@example.com\">\n          someone@example.com</a>.</p>\n      </footer>\n    </BrowserRouter>\n\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}